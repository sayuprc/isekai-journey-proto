syntax = "proto3";

package isekai_journey.journey_log_link_type;

import "shared/shared.proto";

option php_namespace = "Generated\\IsekaiJourney\\JourneyLogLinkType";
option php_metadata_namespace = "Generated\\GPBMetadata";
option go_package = "isekai-journey-api/pkg/grpc/journey_log_link_type";

service JourneyLogLinkTypeService {
  rpc ListJourneyLogLinkTypes(ListJourneyLogLinkTypesRequest) returns (ListJourneyLogLinkTypesResponse);

  rpc CreateJourneyLogLinkType(CreateJourneyLogLinkTypeRequest) returns (CreateJourneyLogLinkTypeResponse);

  rpc EditJourneyLogLinkType(EditJourneyLogLinkTypeRequest) returns (EditJourneyLogLinkTypeResponse);

  rpc GetJourneyLogLinkType(GetJourneyLogLinkTypeRequest) returns (GetJourneyLogLinkTypeResponse);

  rpc DeleteJourneyLogLinkType(DeleteJourneyLogLinkTypeRequest) returns (DeleteJourneyLogLinkTypeResponse);
}

message JourneyLogLinkType {
  string journey_log_link_type_id = 1;
  string journey_log_link_type_name = 2;
  int32 order_no = 3;
}

message ListJourneyLogLinkTypesRequest {
}

message ListJourneyLogLinkTypesResponse {
  shared.Status status = 1;
  // status が FAILED のときのみ存在する
  optional string message = 2;
  // status にかかわらず配列が返る
  repeated JourneyLogLinkType journey_log_link_types = 3;
}

message CreateJourneyLogLinkTypeRequest {
  string journey_log_link_type_name = 1;
  int32 order_no = 2;
}

message CreateJourneyLogLinkTypeResponse {
  shared.Status status = 1;
  // status が FAILED のときのみ存在する
  optional string message = 2;
  // status が SUCCESS のときのみ存在する
  optional JourneyLogLinkType journey_log_link_type = 3;
}

message EditJourneyLogLinkTypeRequest {
  string journey_log_link_type_id = 1;
  string journey_log_link_type_name = 2;
  int32 order_no = 3;
}

message EditJourneyLogLinkTypeResponse {
  shared.Status status = 1;
  // status が FAILED のときのみ存在する
  optional string message = 2;
  // status が SUCCESS のときのみ存在する
  optional JourneyLogLinkType journey_log_link_type = 3;
}

message GetJourneyLogLinkTypeRequest {
  string journey_log_link_type_id = 1;
}

message GetJourneyLogLinkTypeResponse {
  shared.Status status = 1;
  // status が FAILED のときのみ存在する
  optional string message = 2;
  // status が SUCCESS のときのみ存在する
  optional JourneyLogLinkType journey_log_link_type = 3;
}

message DeleteJourneyLogLinkTypeRequest {
  string journey_log_link_type_id = 1;
}

message DeleteJourneyLogLinkTypeResponse {
  shared.Status status = 1;
  // status が FAILED のときのみ存在する
  optional string message = 2;
}

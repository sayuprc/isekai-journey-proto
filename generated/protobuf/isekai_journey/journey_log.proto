// Generated by Microsoft TypeSpec

syntax = "proto3";

package isekai_journey.journey_log;

import "isekai_journey/shared.proto";
import "google/protobuf/empty.proto";

option php_namespace = "Generated\\IsekaiJourney\\JourneyLog";
option php_metadata_namespace = "Generated\\GPBMetadata";
option go_package = "isekai-journey-api/pkg/grpc/journey_log";

message JourneyLogLink {
  string journeyLogLinkId = 1;
  string journeyLogLinkName = 2;
  string url = 3;
  int32 orderNo = 4;
  string journeyLogLinkTypeId = 5;
}

message JourneyLog {
  string journey_log_id = 1;
  string story = 2;
  isekai_journey.shared.Date from_on = 3;
  isekai_journey.shared.Date to_on = 4;
  int32 order_no = 5;
  repeated JourneyLogLink journey_log_links = 6;
}

message ListJourneyLogsRequest {}

message ListJourneyLogsResponse {
  isekai_journey.shared.Status status = 1;
  string message = 2;
  repeated JourneyLog journeyLogs = 3;
}

message CreateJourneyLogRequest {
  string story = 1;
  isekai_journey.shared.Date fromOn = 2;
  isekai_journey.shared.Date toOn = 3;
  int32 orderNo = 4;
  repeated JourneyLogLink journeyLogLinks = 5;
}

message CreateJourneyLogResponse {
  isekai_journey.shared.Status status = 1;
  string message = 2;
  JourneyLog journeyLog = 3;
}

message EditJourneyLogRequest {
  string journeyLogId = 1;
  string story = 2;
  isekai_journey.shared.Date fromOn = 3;
  isekai_journey.shared.Date toOn = 4;
  int32 orderNo = 5;
  repeated JourneyLogLink journeyLogLinks = 6;
}

message EditJourneyLogResponse {
  isekai_journey.shared.Status status = 1;
  string message = 2;
  JourneyLog journeyLog = 3;
}

message GetJourneyLogRequest {
  string journeyLogId = 1;
}

message GetJourneyLogResponse {
  isekai_journey.shared.Status status = 1;
  string message = 2;
  JourneyLog journeyLog = 3;
}

message DeleteJourneyLogRequest {
  string journeyLogId = 1;
}

message DeleteJourneyLogResponse {
  isekai_journey.shared.Status status = 1;
  string message = 2;
}

service JourneyLogService {
  rpc ListJourneyLogs(google.protobuf.Empty) returns (ListJourneyLogsResponse);
  rpc CreateJourneyLog(CreateJourneyLogRequest) returns (CreateJourneyLogResponse);
  rpc EditJourneyLog(EditJourneyLogRequest) returns (EditJourneyLogResponse);
  rpc GetJourneyLog(GetJourneyLogRequest) returns (GetJourneyLogResponse);
  rpc DeleteJourneyLog(DeleteJourneyLogRequest) returns (DeleteJourneyLogResponse);
}
